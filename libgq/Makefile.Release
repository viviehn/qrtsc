#############################################################################
# Makefile for building: libgq.a
# Generated by qmake (2.01a) (Qt 4.8.7) on: Mon Oct 11 13:12:12 2021
# Project:  libgq.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DHAVE_VA_COPY -DDARWIN -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -mmacosx-version-min=10.9 -O2 -arch x86_64 -fPIC -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -stdlib=libc++ -mmacosx-version-min=10.9 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -O2 -arch x86_64 -fPIC -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtOpenGL.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtOpenGL.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtXml.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtXml.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtScript.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtScript.framework/Versions/4/Headers -I/usr/local/include -Iinclude -I../trimesh2/include -Izlib -Imatio -I/usr/local/Cellar/qt@4/4.8.7_6/lib/QtCore.framework/Versions/4/Headers -I/System/Library/Frameworks/OpenGL.framework/Headers -I/System/Library/Frameworks/AGL.framework/Headers/ -Irelease -F/usr/local/lib
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.9

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = libsrc/GQDraw.cc \
		libsrc/GQFramebufferObject.cc \
		libsrc/GQImage.cc \
		libsrc/GQMatlabArray.cc \
		libsrc/GQShaderManager.cc \
		libsrc/GQTexture.cc \
		libsrc/GQVertexBufferSet.cc \
		libsrc/GLee.c \
		zlib/adler32.c \
		zlib/compress.c \
		zlib/crc32.c \
		zlib/deflate.c \
		zlib/gzio.c \
		zlib/infback.c \
		zlib/inffast.c \
		zlib/inflate.c \
		zlib/inftrees.c \
		zlib/ioapi.c \
		zlib/mztools.c \
		zlib/trees.c \
		zlib/uncompr.c \
		zlib/unzip.c \
		zlib/zip.c \
		zlib/zutil.c \
		matio/mat.c \
		matio/mat4.c \
		matio/mat5.c \
		matio/matioEndian.c \
		matio/matioInflate.c \
		matio/matioIO.c \
		matio/matioReadData.c \
		matio/matioSnprintf.c 
OBJECTS       = release/GQDraw.o \
		release/GQFramebufferObject.o \
		release/GQImage.o \
		release/GQMatlabArray.o \
		release/GQShaderManager.o \
		release/GQTexture.o \
		release/GQVertexBufferSet.o \
		release/GLee.o \
		release/adler32.o \
		release/compress.o \
		release/crc32.o \
		release/deflate.o \
		release/gzio.o \
		release/infback.o \
		release/inffast.o \
		release/inflate.o \
		release/inftrees.o \
		release/ioapi.o \
		release/mztools.o \
		release/trees.o \
		release/uncompr.o \
		release/unzip.o \
		release/zip.o \
		release/zutil.o \
		release/mat.o \
		release/mat4.o \
		release/mat5.o \
		release/matioEndian.o \
		release/matioInflate.o \
		release/matioIO.o \
		release/matioReadData.o \
		release/matioSnprintf.o
DIST          = /usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/release.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/debug_and_release.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/build_pass.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/staticlib.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/static.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/unix/opengl.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt@4/4.8.7_6/etc/qt4/mkspecs/features/include_source_dir.prf \
		libgq.pro
QMAKE_TARGET  = gq
DESTDIR       = release/
TARGET        = libgq.a

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release release/$(TARGET) 

staticlib: release/$(TARGET)

release/$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	@$(CHK_DIR_EXISTS) release/ || $(MKDIR) release/ 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)
	$(RANLIB) $(TARGET)
	-$(DEL_FILE) release/$(TARGET)
	-$(MOVE) $(TARGET) release/


qmake:  FORCE
	@$(QMAKE) -o Makefile.Release libgq.pro

dist: 
	@$(CHK_DIR_EXISTS) release/gq1.0.0 || $(MKDIR) release/gq1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/gq1.0.0/ && $(COPY_FILE) --parents include/GQDraw.h include/GQFramebufferObject.h include/GQImage.h include/GQInclude.h include/GQMatlabArray.h include/GQShaderManager.h include/GQTexture.h include/GQVertexBufferSet.h release/gq1.0.0/ && $(COPY_FILE) --parents libsrc/GQDraw.cc libsrc/GQFramebufferObject.cc libsrc/GQImage.cc libsrc/GQMatlabArray.cc libsrc/GQShaderManager.cc libsrc/GQTexture.cc libsrc/GQVertexBufferSet.cc libsrc/GLee.c zlib/adler32.c zlib/compress.c zlib/crc32.c zlib/deflate.c zlib/gzio.c zlib/infback.c zlib/inffast.c zlib/inflate.c zlib/inftrees.c zlib/ioapi.c zlib/mztools.c zlib/trees.c zlib/uncompr.c zlib/unzip.c zlib/zip.c zlib/zutil.c matio/mat.c matio/mat4.c matio/mat5.c matio/matioEndian.c matio/matioInflate.c matio/matioIO.c matio/matioReadData.c matio/matioSnprintf.c release/gq1.0.0/ && (cd `dirname release/gq1.0.0` && $(TAR) gq1.0.0.tar gq1.0.0 && $(COMPRESS) gq1.0.0.tar) && $(MOVE) `dirname release/gq1.0.0`/gq1.0.0.tar.gz . && $(DEL_FILE) -r release/gq1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

release/GQDraw.o: libsrc/GQDraw.cc include/GQDraw.h \
		include/GQVertexBufferSet.h \
		include/GQShaderManager.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h \
		include/GQFramebufferObject.h \
		include/GQImage.h \
		include/GQTexture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQDraw.o libsrc/GQDraw.cc

release/GQFramebufferObject.o: libsrc/GQFramebufferObject.cc include/GQFramebufferObject.h \
		include/GQImage.h \
		include/GQTexture.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQFramebufferObject.o libsrc/GQFramebufferObject.cc

release/GQImage.o: libsrc/GQImage.cc include/GQImage.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQImage.o libsrc/GQImage.cc

release/GQMatlabArray.o: libsrc/GQMatlabArray.cc include/GQMatlabArray.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQMatlabArray.o libsrc/GQMatlabArray.cc

release/GQShaderManager.o: libsrc/GQShaderManager.cc include/GQShaderManager.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h \
		include/GQTexture.h \
		include/GQImage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQShaderManager.o libsrc/GQShaderManager.cc

release/GQTexture.o: libsrc/GQTexture.cc include/GQTexture.h \
		include/GQImage.h \
		include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h \
		include/GQMatlabArray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQTexture.o libsrc/GQTexture.cc

release/GQVertexBufferSet.o: libsrc/GQVertexBufferSet.cc include/GQInclude.h \
		include/GLee.h \
		/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/glu.h \
		include/GQVertexBufferSet.h \
		include/GQShaderManager.h \
		include/GQFramebufferObject.h \
		include/GQImage.h \
		include/GQTexture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/GQVertexBufferSet.o libsrc/GQVertexBufferSet.cc

release/GLee.o: libsrc/GLee.c include/GLee.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/GLee.o libsrc/GLee.c

release/adler32.o: zlib/adler32.c zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/adler32.o zlib/adler32.c

release/compress.o: zlib/compress.c zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/compress.o zlib/compress.c

release/crc32.o: zlib/crc32.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/crc32.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/crc32.o zlib/crc32.c

release/deflate.o: zlib/deflate.c zlib/deflate.h \
		zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/deflate.o zlib/deflate.c

release/gzio.o: zlib/gzio.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/gzio.o zlib/gzio.c

release/infback.o: zlib/infback.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/inftrees.h \
		zlib/inflate.h \
		zlib/inffast.h \
		zlib/inffixed.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/infback.o zlib/infback.c

release/inffast.o: zlib/inffast.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/inftrees.h \
		zlib/inflate.h \
		zlib/inffast.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/inffast.o zlib/inffast.c

release/inflate.o: zlib/inflate.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/inftrees.h \
		zlib/inflate.h \
		zlib/inffast.h \
		zlib/inffixed.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/inflate.o zlib/inflate.c

release/inftrees.o: zlib/inftrees.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/inftrees.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/inftrees.o zlib/inftrees.c

release/ioapi.o: zlib/ioapi.c zlib/zlib.h \
		zlib/zconf.h \
		zlib/ioapi.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/ioapi.o zlib/ioapi.c

release/mztools.o: zlib/mztools.c zlib/zlib.h \
		zlib/zconf.h \
		zlib/unzip.h \
		zlib/ioapi.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/mztools.o zlib/mztools.c

release/trees.o: zlib/trees.c zlib/deflate.h \
		zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h \
		zlib/trees.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/trees.o zlib/trees.c

release/uncompr.o: zlib/uncompr.c zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/uncompr.o zlib/uncompr.c

release/unzip.o: zlib/unzip.c zlib/zlib.h \
		zlib/zconf.h \
		zlib/unzip.h \
		zlib/ioapi.h \
		zlib/crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/unzip.o zlib/unzip.c

release/zip.o: zlib/zip.c zlib/zlib.h \
		zlib/zconf.h \
		zlib/zip.h \
		zlib/ioapi.h \
		zlib/crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/zip.o zlib/zip.c

release/zutil.o: zlib/zutil.c zlib/zutil.h \
		zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/zutil.o zlib/zutil.c

release/mat.o: matio/mat.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/mat5.h \
		matio/mat4.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/mat.o matio/mat.c

release/mat4.o: matio/mat4.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/mat4.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/mat4.o matio/mat4.c

release/mat5.o: matio/mat5.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/mat5.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/mat5.o matio/mat5.c

release/matioEndian.o: matio/matioEndian.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/matioEndian.o matio/matioEndian.c

release/matioInflate.o: matio/matioInflate.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/matioInflate.o matio/matioInflate.c

release/matioIO.o: matio/matioIO.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/matioIO.o matio/matioIO.c

release/matioReadData.o: matio/matioReadData.c matio/matio.h \
		matio/matioConfig.h \
		zlib/zlib.h \
		zlib/zconf.h \
		matio/matio_private.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/matioReadData.o matio/matioReadData.c

release/matioSnprintf.o: matio/matioSnprintf.c matio/matioConfig.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release/matioSnprintf.o matio/matioSnprintf.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

